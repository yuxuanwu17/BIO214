%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Thu May  7 20:12:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -T 70.000000 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGCGACUGCGGCGGCGGUGGUGGGGGGAGCCGCGGGGAUCGCCGAGGGCCGGUCGGCCGCCCCGGGUGCCGCGCGGUGCCGCCGGCGGCGGUGAGGCCCCGCGCGUGUGUCCCGGCUGCGGUCGGCCGCGCUCGAGGGGUCCCCGUGGCGUCCCCUUCCCCGCCGGCCGCCUUUCUCGCG\
) def
/coor [
[120.69684601 712.26086426]
[120.69684601 697.26086426]
[120.69684601 682.26086426]
[120.69684601 667.26086426]
[120.69684601 652.26086426]
[105.94539642 639.57135010]
[105.22856903 619.82177734]
[119.45233154 605.66705322]
[118.67162323 590.68737793]
[117.89091492 575.70770264]
[117.11021423 560.72802734]
[116.32950592 545.74835205]
[115.41883087 530.77600098]
[114.37825775 515.81213379]
[113.33767700 500.84829712]
[112.29710388 485.88442993]
[111.25653076 470.92056274]
[107.64615631 464.44848633]
[110.33004761 455.68838501]
[109.54933929 440.70870972]
[101.16011047 428.40139771]
[108.16866302 414.21722412]
[107.38796234 399.23754883]
[106.60725403 384.25787354]
[105.82654572 369.27819824]
[105.04584503 354.29852295]
[104.26513672 339.31887817]
[95.87590790 327.01153564]
[102.88446045 312.82739258]
[102.10375214 297.84771729]
[101.32304382 282.86804199]
[100.54234314 267.88836670]
[99.76163483 252.90870667]
[98.98092651 237.92903137]
[98.20022583 222.94935608]
[97.41951752 207.96969604]
[96.63880920 192.99002075]
[95.85810852 178.01034546]
[95.07740021 163.03068542]
[94.29669189 148.05101013]
[90.79919434 141.51724243]
[93.63471985 132.80502319]
[93.11412048 117.81406403]
[82.59093475 107.85370636]
[82.08805084 93.37290955]
[91.89492035 82.70653534]
[91.37431335 67.71557617]
[90.85371399 52.72460938]
[90.33311462 37.73364639]
[89.68243408 22.74776649]
[88.90172577 7.76809692]
[88.12102509 -7.21157265]
[87.34031677 -22.19124222]
[86.55960846 -37.17090988]
[85.77890778 -52.15058136]
[84.99819946 -67.13024902]
[84.21749115 -82.10991669]
[83.43678284 -97.08959198]
[82.65608215 -112.06925964]
[81.87537384 -127.04892731]
[71.49249268 -142.24163818]
[80.03565216 -157.55761719]
[78.99507141 -172.52146912]
[77.95449829 -187.48533630]
[76.91392517 -202.44920349]
[75.87335205 -217.41307068]
[65.22834778 -232.42327881]
[73.50439453 -247.88522339]
[72.20426178 -262.82876587]
[70.77449799 -277.76046753]
[69.21520233 -292.67919922]
[67.65590668 -307.59793091]
[66.09661102 -322.51666260]
[64.53730774 -337.43539429]
[62.97801590 -352.35412598]
[61.41872025 -367.27285767]
[52.28876877 -380.19396973]
[58.66110992 -393.65658569]
[57.10181427 -408.57531738]
[55.54251862 -423.49404907]
[53.72452927 -438.38348389]
[51.64839172 -453.23910522]
[49.57225418 -468.09472656]
[47.49611664 -482.95037842]
[36.98862076 -495.54101562]
[42.89194107 -510.84078979]
[59.13324738 -513.11059570]
[69.00487518 -500.01544189]
[62.35174561 -485.02648926]
[64.42787933 -470.17086792]
[66.50402069 -455.31524658]
[68.58015442 -440.45962524]
[71.80628204 -436.90490723]
[72.81621552 -431.27780151]
[70.46125031 -425.05334473]
[72.02054596 -410.13461304]
[73.57984161 -395.21588135]
[82.59826660 -383.36187744]
[76.33745575 -368.83215332]
[77.89675140 -353.91342163]
[79.45604706 -338.99468994]
[81.01534271 -324.07595825]
[82.57463837 -309.15722656]
[84.13393402 -294.23849487]
[85.69322968 -279.31976318]
[89.52605438 -272.97689819]
[87.14781189 -264.12890625]
[88.44794464 -249.18534851]
[97.51541138 -241.15313721]
[98.70648193 -228.69534302]
[90.83721161 -218.45364380]
[91.87778473 -203.48977661]
[92.91836548 -188.52590942]
[93.95893860 -173.56205750]
[94.99951172 -158.59819031]
[103.92620850 -150.40980530]
[104.90087891 -137.93321228]
[96.85504150 -127.82963562]
[97.63574982 -112.84996796]
[98.41645813 -97.87029266]
[99.19715881 -82.89062500]
[99.97786713 -67.91095734]
[100.75857544 -52.93128586]
[101.53927612 -37.95161819]
[102.31998444 -22.97194862]
[103.10069275 -7.99227858]
[103.88140106 6.98739100]
[104.66210175 21.96706009]
[108.15960693 28.50083542]
[105.32407379 37.21304703]
[105.84468079 52.20401001]
[106.36528015 67.19496918]
[106.88587952 82.18593597]
[117.40906525 92.14629364]
[117.91194916 106.62709045]
[108.10507965 117.29346466]
[108.62568665 132.28442383]
[109.27635956 147.27030945]
[110.05706787 162.24996948]
[110.83777618 177.22964478]
[111.61848450 192.20932007]
[112.39918518 207.18898010]
[113.17989349 222.16865540]
[113.96060181 237.14833069]
[114.74130249 252.12799072]
[115.52201080 267.10766602]
[116.30271912 282.08734131]
[117.08341980 297.06701660]
[117.86412811 312.04666138]
[126.30920410 325.42544556]
[119.24480438 338.53814697]
[120.02551270 353.51782227]
[120.80621338 368.49749756]
[121.58692169 383.47717285]
[122.36763000 398.45684814]
[123.14833832 413.43652344]
[131.59341431 426.81527710]
[124.52901459 439.92800903]
[125.30971527 454.90765381]
[126.22039032 469.88000488]
[127.26097107 484.84387207]
[128.30154419 499.80773926]
[129.34211731 514.77160645]
[130.38269043 529.73547363]
[134.10852051 538.10571289]
[131.30917358 544.96765137]
[132.08987427 559.94732666]
[132.87059021 574.92700195]
[133.65129089 589.90667725]
[134.43200684 604.88635254]
[143.92938232 609.84906006]
[150.44876099 618.25140381]
[152.85955811 628.52642822]
[150.78961182 638.79290771]
[144.68078613 647.20007324]
[135.69683838 652.26086426]
[135.69683838 667.26086426]
[135.69683838 682.26086426]
[135.69683838 697.26086426]
[135.69683838 712.26086426]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[5 176]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[19 159]
[20 158]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[42 137]
[43 136]
[46 133]
[47 132]
[48 131]
[49 130]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[68 108]
[69 107]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[78 97]
[79 96]
[80 95]
[81 92]
[82 91]
[83 90]
[84 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
