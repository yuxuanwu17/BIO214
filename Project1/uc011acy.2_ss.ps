%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Thu May  7 20:12:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -T 70.000000 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUGUGCUAUGGCUACGGCUGUGGAUGUGGCAGCUUCUGCAGACUGGGCUAUGGCUGCGGCUAUGAAGGAUGCAGAUAUGGUUGUGGCCACAGAGGCUGUGGAGAUGGCUGCUGCUGCCCAUCAUGCUACAGAAGAUAUAGAUUCACUGGCUUCUACUAA\
) def
/coor [
[77.90311432 565.62603760]
[63.72111511 570.73815918]
[48.72772217 572.30712891]
[33.79463196 570.24163818]
[19.79003525 564.66180420]
[7.52814436 555.89196777]
[-2.27815437 544.44207764]
[-9.05873394 530.97778320]
[-12.41938114 516.28192139]
[-12.16471195 501.20880127]
[-8.30953217 486.63479614]
[-1.07797742 473.40725708]
[9.10951900 462.29516602]
[21.66067123 453.94461060]
[35.84576797 448.84103394]
[50.84011078 447.28118896]
[52.89529419 432.42263794]
[54.95048141 417.56408691]
[57.00566483 402.70556641]
[58.91488266 387.82754517]
[60.67794037 372.93151855]
[62.44100189 358.03549194]
[64.20406342 343.13946533]
[65.96712494 328.24343872]
[56.57300186 316.74188232]
[58.14879608 301.61007690]
[70.27639008 291.83465576]
[72.03945160 276.93862915]
[61.41796112 268.80282593]
[56.17360306 256.37637329]
[57.78017044 242.87541199]
[65.92301178 231.85224915]
[78.55362701 226.26052856]
[80.60881805 211.40199280]
[82.66400146 196.54345703]
[84.71918488 181.68490601]
[86.77436829 166.82637024]
[88.39110565 151.91375732]
[89.56799316 136.95999146]
[90.74488068 122.00623322]
[79.61103821 112.41860962]
[76.20035553 98.12693024]
[81.80475616 84.54474640]
[94.30136108 76.81687927]
[95.47824860 61.86311722]
[96.65513611 46.90935898]
[97.83201599 31.95559692]
[99.00890350 17.00183678]
[96.71035004 12.19973278]
[96.53694153 7.47515440]
[98.09420776 3.63602424]
[100.72086334 1.21092153]
[102.77604675 -13.64761829]
[104.83123016 -28.50615883]
[99.05769348 -43.23629379]
[108.46582031 -54.78343201]
[110.52100372 -69.64197540]
[112.57618713 -84.50051117]
[114.63137817 -99.35905457]
[116.68656158 -114.21759033]
[118.74174500 -129.07612610]
[120.79692841 -143.93467712]
[122.85211945 -158.79321289]
[109.49417114 -165.91996765]
[99.39944458 -177.16578674]
[93.77194214 -191.16047668]
[93.27295685 -206.20777893]
[97.94342041 -220.49092102]
[107.20130157 -232.29203796]
[119.91403198 -240.19869995]
[134.53709412 -243.27304077]
[136.59226990 -258.13156128]
[123.95586395 -266.62170410]
[116.29002380 -279.70306396]
[115.06903076 -294.75396729]
[120.48165894 -308.78479004]
[131.40438843 -319.03192139]
[145.63409424 -323.50192261]
[147.68927002 -338.36047363]
[149.74446106 -353.21902466]
[151.79965210 -368.07754517]
[145.12538147 -383.05706787]
[154.97853088 -396.16613770]
[171.22302246 -393.91925049]
[177.14791870 -378.62783813]
[166.65818787 -366.02236938]
[164.60299683 -351.16381836]
[162.54782104 -336.30529785]
[160.49263000 -321.44674683]
[172.97474670 -313.28204346]
[180.70590210 -300.45477295]
[182.10678101 -285.48150635]
[176.84620667 -271.32714844]
[165.91735840 -260.81771851]
[151.45082092 -256.07638550]
[149.39562988 -241.21784973]
[162.63516235 -234.28965759]
[172.72442627 -223.22908020]
[178.43141174 -209.35807800]
[179.04949951 -194.34344482]
[174.48480225 -179.99653625]
[165.26986694 -168.05480957]
[152.50157166 -159.97132874]
[137.71066284 -156.73802185]
[135.65547180 -141.87948608]
[133.60028076 -127.02095032]
[131.54510498 -112.16240692]
[129.48991394 -97.30386353]
[127.43473053 -82.44532776]
[125.37954712 -67.58678436]
[123.32436371 -52.72824478]
[129.24490356 -39.06089401]
[119.68977356 -26.45097351]
[117.63459015 -11.59243393]
[115.57939911 3.26610661]
[113.96266174 18.17872429]
[112.78578186 33.13248444]
[111.60889435 48.08624268]
[110.43200684 63.04000473]
[109.25511932 77.99376678]
[120.38896179 87.58139038]
[123.79964447 101.87306976]
[118.19524384 115.45525360]
[105.69863892 123.18312073]
[104.52175140 138.13688660]
[103.34486389 153.09063721]
[105.64342499 157.89274597]
[105.81683350 162.61732483]
[104.25956726 166.45645142]
[101.63291168 168.88156128]
[99.57772827 183.74009705]
[97.52253723 198.59863281]
[95.46735382 213.45718384]
[93.41217041 228.31571960]
[105.75249481 239.84721375]
[108.77691650 256.29519653]
[101.49177551 271.16430664]
[86.93547821 278.70169067]
[85.17241669 293.59771729]
[94.68289948 305.93417358]
[92.68270111 321.01574707]
[80.86315155 330.00650024]
[79.10009003 344.90252686]
[77.33702850 359.79855347]
[75.57396698 374.69458008]
[73.81090546 389.59060669]
[75.91683197 398.53353882]
[71.86420441 404.76074219]
[69.80902100 419.61929321]
[67.75383759 434.47781372]
[65.69865417 449.33636475]
[79.70662689 454.90771484]
[91.97383118 463.67010498]
[101.78707123 475.11404419]
[108.57581329 488.57421875]
[111.94536591 503.26806641]
[111.69983673 518.34130859]
[107.85349274 532.91766357]
[100.62995911 546.14959717]
] def
/pairs [
[16 151]
[17 150]
[18 149]
[19 148]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[27 139]
[28 138]
[33 134]
[34 133]
[35 132]
[36 131]
[37 130]
[38 126]
[39 125]
[40 124]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[52 115]
[53 114]
[54 113]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[61 106]
[62 105]
[63 104]
[71 96]
[72 95]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
