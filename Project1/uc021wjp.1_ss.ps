%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Thu May  7 20:12:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -T 70.000000 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUGCACAGCUGUCCCACCCUGAAAGCAAUAAUCUGAUGGUAGAAGCUAAGCAGAGUUAGGCCCCGGCUAGUCCUUGAAUGAGAGACCACCUGGGAAUUCUGGGGGCUGUAGGGU\
) def
/coor [
[68.55702209 216.60423279]
[70.29721069 231.66236877]
[66.77925110 246.40684509]
[58.42794800 259.05722046]
[46.25176620 268.08584595]
[31.72103310 272.40252686]
[16.59041214 271.48596191]
[2.68699455 265.44686890]
[-8.31031227 255.01445007]
[-15.07352924 241.44851685]
[-16.78596687 226.38719177]
[-13.24083900 211.64921570]
[-4.86623716 199.01426697]
[7.32656479 190.00808716]
[21.86522675 185.71820068]
[36.99413300 186.66264343]
[42.97014999 172.90446472]
[48.94616699 159.14630127]
[54.92218399 145.38813782]
[60.89820099 131.62995911]
[66.87421417 117.87179565]
[60.46745300 131.43473816]
[48.32654572 140.24372864]
[33.44519806 142.12666321]
[19.49283981 136.61923218]
[9.90984535 125.07946777]
[7.05918217 110.35282898]
[11.64376640 96.07061768]
[22.53313255 85.75453186]
[37.04218674 81.94830322]
[51.59328842 85.59046936]
[62.59777451 95.78192902]
[51.91898346 85.24801636]
[41.24019241 74.71409607]
[30.56139946 64.18018341]
[12.68780613 60.02151108]
[8.55755615 43.02536011]
[-2.40498304 32.78706360]
[-13.36752224 22.54876709]
[-24.33006287 12.31046963]
[-40.41951370 9.13847923]
[-45.46042633 -6.46668863]
[-34.26713562 -18.45177460]
[-18.35434341 -14.48755074]
[-14.09176445 1.34792995]
[-3.12922525 11.58622742]
[7.83331394 21.82452393]
[18.79585266 32.06282043]
[30.97710037 31.98668098]
[40.20261002 40.54531860]
[41.09531403 53.50138855]
[51.77410889 64.03530121]
[62.45289993 74.56922150]
[73.13169098 85.10313416]
[82.56116486 76.47122192]
[94.16398621 72.76640320]
[105.65206146 74.19474030]
[114.96617889 79.99704742]
[120.64509583 88.67524719]
[135.40924072 86.02570343]
[150.17338562 83.37615204]
[164.93753052 80.72660065]
[179.70166016 78.07705688]
[194.46580505 75.42750549]
[197.76974487 60.61671066]
[206.46897888 48.23259354]
[219.21240234 40.14439774]
[234.04142761 37.55834961]
[248.69099426 40.83783722]
[260.93554688 49.45273590]
[268.92712402 62.06480026]
[283.69125366 59.41524887]
[298.45538330 56.76570129]
[313.21954346 54.11614990]
[315.50814819 39.14815521]
[322.53506470 25.73543167]
[333.53808594 15.33290005]
[347.32363892 9.06894493]
[362.39639282 7.62303448]
[377.12136841 11.15200996]
[389.90130615 19.27307510]
[399.34994507 31.10531616]
[404.44238281 45.36526108]
[404.62615967 60.50609589]
[399.88143921 74.88545990]
[390.72280884 86.94358826]
[378.14376831 95.37249756]
[363.50878906 99.25788879]
[348.40536499 98.17829895]
[334.47183228 92.25084686]
[323.21954346 82.11847687]
[315.86907959 68.88029480]
[301.10494995 71.52984619]
[286.34078979 74.17938995]
[271.57666016 76.82894135]
[268.46920776 91.43281555]
[259.98431396 103.76779175]
[247.38922119 111.93656158]
[232.58633423 114.66820526]
[217.82569885 111.51584625]
[205.36311340 102.92938995]
[197.11535645 90.19165039]
[182.35121155 92.84119415]
[167.58706665 95.49074554]
[152.82293701 98.14029694]
[138.05879211 100.78984070]
[123.29464722 103.43939209]
[109.83894348 125.28780365]
[80.63238525 123.84780884]
[74.65637207 137.60597229]
[68.68035126 151.36415100]
[62.70433807 165.12231445]
[56.72832108 178.88049316]
[50.75230408 192.63865662]
] def
/pairs [
[16 114]
[17 113]
[18 112]
[19 111]
[20 110]
[21 109]
[32 54]
[33 53]
[34 52]
[35 51]
[37 48]
[38 47]
[39 46]
[40 45]
[59 107]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[71 95]
[72 94]
[73 93]
[74 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
